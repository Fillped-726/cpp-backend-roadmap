name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

jobs:
  build-and-test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Restore vcpkg cache
        uses: actions/cache@v4
        with:
          path: |
            vcpkg
            build/vcpkg_installed
          key: vcpkg-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}

      - name: Install toolchain
        run: sudo apt-get update && sudo apt-get install -y clang-15 ninja-build cmake

      - name: Bootstrap vcpkg
        run: |
          [[ -d vcpkg ]] || git clone https://github.com/microsoft/vcpkg.git vcpkg
          ./vcpkg/bootstrap-vcpkg.sh

      - name: Configure & Build mini-stl
        run: |
          # 清理旧的构建目录
          rm -rf mini-stl/build
          # 创建统一的构建目录
          mkdir -p mini-stl/build
          # 配置 CMake（源目录为 mini-stl，构建目录为 mini-stl/build）
          cmake -S mini-stl -B mini-stl/build -G Ninja \
            -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake \
            -DCMAKE_BUILD_TYPE=Release
          # 并行编译
          cmake --build mini-stl/build --parallel $(nproc)

      - name: Run Tests
        run: |
          # 进入构建目录并运行测试
          cd mini-stl/build
          ctest --output-on-failure --output-junit test_result.xml

      - name: Upload Test Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mini-stl-test-report
          path: mini-stl/build/test_result.xml